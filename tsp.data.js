
//optimal:1610
bayg29Data = [97, 205, 139, 86, 60, 220, 65, 111, 115, 227, 95, 82, 225, 168, 103, 266, 205, 149, 120, 58, 257, 152, 52, 180, 136, 82, 34, 145
    , 129, 103, 71, 105, 258, 154, 112, 65, 204, 150, 87, 176, 137, 142, 204, 148, 148, 49, 41, 211, 226, 116, 197, 89, 153, 124, 74
    , 219, 125, 175, 386, 269, 134, 184, 313, 201, 215, 267, 248, 271, 274, 236, 272, 160, 151, 300, 350, 239, 322, 78, 276, 220, 60
    , 167, 182, 180, 162, 208, 39, 102, 227, 60, 86, 34, 96, 129, 69, 58, 60, 120, 119, 192, 114, 110, 192, 136, 173, 173
    , 51, 296, 150, 42, 131, 268, 88, 131, 245, 201, 175, 275, 218, 202, 119, 50, 281, 238, 131, 244, 51, 166, 95, 69
    , 279, 114, 56, 150, 278, 46, 133, 266, 214, 162, 302, 242, 203, 146, 67, 300, 205, 111, 238, 98, 139, 52, 120
    , 178, 328, 206, 147, 308, 172, 203, 165, 121, 251, 216, 122, 231, 249, 209, 111, 169, 72, 338, 144, 237, 331
    , 169, 151, 227, 133, 104, 242, 182, 84, 290, 230, 146, 165, 121, 270, 91, 48, 158, 200, 39, 64, 210
    , 172, 309, 68, 169, 286, 242, 208, 315, 259, 240, 160, 90, 322, 260, 160, 281, 57, 192, 107, 90
    , 140, 195, 51, 117, 72, 104, 153, 93, 88, 25, 85, 152, 200, 104, 139, 154, 134, 149, 135
    , 320, 146, 64, 68, 143, 106, 88, 81, 159, 219, 63, 216, 187, 88, 293, 191, 258, 272
    , 174, 311, 258, 196, 347, 288, 243, 192, 113, 345, 222, 144, 274, 124, 165, 71, 153
    , 144, 86, 57, 189, 128, 71, 71, 82, 176, 150, 56, 114, 168, 83, 115, 160
    , 61, 165, 51, 32, 105, 127, 201, 36, 254, 196, 136, 260, 212, 258, 234
    , 106, 110, 56, 49, 91, 153, 91, 197, 136, 94, 225, 151, 201, 205
    , 215, 159, 64, 126, 128, 190, 98, 53, 78, 218, 48, 127, 214
    , 61, 155, 157, 235, 47, 305, 243, 186, 282, 261, 300, 252
    , 105, 100, 176, 66, 253, 183, 146, 231, 203, 239, 204
    , 113, 152, 127, 150, 106, 52, 235, 112, 179, 221
    , 79, 163, 220, 119, 164, 135, 152, 153, 114
    , 236, 201, 90, 195, 90, 127, 84, 91
    , 273, 226, 148, 296, 238, 291, 269
    , 112, 130, 286, 74, 155, 291
    , 130, 178, 38, 75, 180
    , 281, 120, 205, 270
    , 213, 145, 36
    , 94, 217
    , 162]

bayg29Coods = [1150.0, 1760.0
    , 630.0, 1660.0
    , 40.0, 2090.0
    , 750.0, 1100.0
    , 750.0, 2030.0
    , 1030.0, 2070.0
    , 1650.0, 650.0
    , 1490.0, 1630.0
    , 790.0, 2260.0
    , 10, 710.0, 1310.0
    , 11, 840.0, 550.0
    , 12, 1170.0, 2300.0
    , 13, 970.0, 1340.0
    , 14, 510.0, 700.0
    , 15, 750.0, 900.0
    , 16, 1280.0, 1200.0
    , 17, 230.0, 590.0
    , 18, 460.0, 860.0
    , 19, 1040.0, 950.0
    , 20, 590.0, 1390.0
    , 21, 830.0, 1770.0
    , 22, 490.0, 500.0
    , 23, 1840.0, 1240.0
    , 24, 1260.0, 1500.0
    , 25, 1280.0, 790.0
    , 26, 490.0, 2130.0
    , 27, 1460.0, 1420.0
    , 28, 1260.0, 1910.0
    , 29, 360.0, 1980.0]

// optimal: 699
dantzig42Data = [0, 8, 0, 39, 45, 0, 37, 47, 9, 0, 50, 49, 21, 15, 0, 61, 62, 21
    , 20, 17, 0, 58, 60, 16, 17, 18, 6, 0, 59, 60, 15, 20, 26, 17, 10, 0
    , 62, 66, 20, 25, 31, 22, 15, 5, 0, 81, 81, 40, 44, 50, 41, 35, 24, 20
    , 0, 103, 107, 62, 67, 72, 63, 57, 46, 41, 23, 0, 108, 117, 66, 71, 77, 68
    , 61, 51, 46, 26, 11, 0, 145, 149, 104, 108, 114, 106, 99, 88, 84, 63, 49, 40
    , 0, 181, 185, 140, 144, 150, 142, 135, 124, 120, 99, 85, 76, 35, 0, 187, 191, 146
    , 150, 156, 142, 137, 130, 125, 105, 90, 81, 41, 10, 0, 161, 170, 120, 124, 130, 115
    , 110, 104, 105, 90, 72, 62, 34, 31, 27, 0, 142, 146, 101, 104, 111, 97, 91, 85
    , 86, 75, 51, 59, 29, 53, 48, 21, 0, 174, 178, 133, 138, 143, 129, 123, 117, 118
    , 107, 83, 84, 54, 46, 35, 26, 31, 0, 185, 186, 142, 143, 140, 130, 126, 124, 128
    , 118, 93, 101, 72, 69, 58, 58, 43, 26, 0, 164, 165, 120, 123, 124, 106, 106, 105
    , 110, 104, 86, 97, 71, 93, 82, 62, 42, 45, 22, 0, 137, 139, 94, 96, 94, 80
    , 78, 77, 84, 77, 56, 64, 65, 90, 87, 58, 36, 68, 50, 30, 0, 117, 122, 77
    , 80, 83, 68, 62, 60, 61, 50, 34, 42, 49, 82, 77, 60, 30, 62, 70, 49, 21
    , 0, 114, 118, 73, 78, 84, 69, 63, 57, 59, 48, 28, 36, 43, 77, 72, 45, 27
    , 59, 69, 55, 27, 5, 0, 85, 89, 44, 48, 53, 41, 34, 28, 29, 22, 23, 35
    , 69, 105, 102, 74, 56, 88, 99, 81, 54, 32, 29, 0, 77, 80, 36, 40, 46, 34
    , 27, 19, 21, 14, 29, 40, 77, 114, 111, 84, 64, 96, 107, 87, 60, 40, 37, 8
    , 0, 87, 89, 44, 46, 46, 30, 28, 29, 32, 27, 36, 47, 78, 116, 112, 84, 66
    , 98, 95, 75, 47, 36, 39, 12, 11, 0, 91, 93, 48, 50, 48, 34, 32, 33, 36
    , 30, 34, 45, 77, 115, 110, 83, 63, 97, 91, 72, 44, 32, 36, 9, 15, 3, 0
    , 105, 106, 62, 63, 64, 47, 46, 49, 54, 48, 46, 59, 85, 119, 115, 88, 66, 98
    , 79, 59, 31, 36, 42, 28, 33, 21, 20, 0, 111, 113, 69, 71, 66, 51, 53, 56
    , 61, 57, 59, 71, 96, 130, 126, 98, 75, 98, 85, 62, 38, 47, 53, 39, 42, 29
    , 30, 12, 0, 91, 92, 50, 51, 46, 30, 34, 38, 43, 49, 60, 71, 103, 141, 136
    , 109, 90, 115, 99, 81, 53, 61, 62, 36, 34, 24, 28, 20, 20, 0, 83, 85, 42
    , 43, 38, 22, 26, 32, 36, 51, 63, 75, 106, 142, 140, 112, 93, 126, 108, 88, 60
    , 64, 66, 39, 36, 27, 31, 28, 28, 8, 0, 89, 91, 55, 55, 50, 34, 39, 44
    , 49, 63, 76, 87, 120, 155, 150, 123, 100, 123, 109, 86, 62, 71, 78, 52, 49, 39
    , 44, 35, 24, 15, 12, 0, 95, 97, 64, 63, 56, 42, 49, 56, 60, 75, 86, 97
    , 126, 160, 155, 128, 104, 128, 113, 90, 67, 76, 82, 62, 59, 49, 53, 40, 29, 25
    , 23, 11, 0, 74, 81, 44, 43, 35, 23, 30, 39, 44, 62, 78, 89, 121, 159, 155
    , 127, 108, 136, 124, 101, 75, 79, 81, 54, 50, 42, 46, 43, 39, 23, 14, 14, 21
    , 0, 67, 69, 42, 41, 31, 25, 32, 41, 46, 64, 83, 90, 130, 164, 160, 133, 114
    , 146, 134, 111, 85, 84, 86, 59, 52, 47, 51, 53, 49, 32, 24, 24, 30, 9, 0
    , 74, 76, 61, 60, 42, 44, 51, 60, 66, 83, 102, 110, 147, 185, 179, 155, 133, 159
    , 146, 122, 98, 105, 107, 79, 71, 66, 70, 70, 60, 48, 40, 36, 33, 25, 18, 0
    , 57, 59, 46, 41, 25, 30, 36, 47, 52, 71, 93, 98, 136, 172, 172, 148, 126, 158
    , 147, 124, 121, 97, 99, 71, 65, 59, 63, 67, 62, 46, 38, 37, 43, 23, 13, 17
    , 0, 45, 46, 41, 34, 20, 34, 38, 48, 53, 73, 96, 99, 137, 176, 178, 151, 131
    , 163, 159, 135, 108, 102, 103, 73, 67, 64, 69, 75, 72, 54, 46, 49, 54, 34, 24
    , 29, 12, 0, 35, 37, 35, 26, 18, 34, 36, 46, 51, 70, 93, 97, 134, 171, 176
    , 151, 129, 161, 163, 139, 118, 102, 101, 71, 65, 65, 70, 84, 78, 58, 50, 56, 62
    , 41, 32, 38, 21, 9, 0, 29, 33, 30, 21, 18, 35, 33, 40, 45, 65, 87, 91
    , 117, 166, 171, 144, 125, 157, 156, 139, 113, 95, 97, 67, 60, 62, 67, 79, 82, 62
    , 53, 59, 66, 45, 38, 45, 27, 15, 6, 0, 3, 11, 41, 37, 47, 57, 55, 58
    , 63, 83, 105, 109, 147, 186, 188, 164, 144, 176, 182, 161, 134, 119, 116, 86, 78, 84
    , 88, 101, 108, 88, 80, 86, 92, 71, 64, 71, 54, 41, 32, 25, 0, 5, 12, 55
    , 41, 53, 64, 61, 61, 66, 84, 111, 113, 150, 186, 192, 166, 147, 180, 188, 167, 140
    , 124, 119, 90, 87, 90, 94, 107, 114, 77, 86, 92, 98, 80, 74, 77, 60, 48, 38
    , 32, 6, 0]

dantzig42Coods = [170.0, 85.0
    , 166.0, 88.0
    , 133.0, 73.0
    , 140.0, 70.0
    , 142.0, 55.0
    , 126.0, 53.0
    , 125.0, 60.0
    , 119.0, 68.0
    , 117.0, 74.0
    , 99.0, 83.0
    , 73.0, 79.0
    , 72.0, 91.0
    , 37.0, 94.0
    , 6.0, 106.0
    , 3.0, 97.0
    , 21.0, 82.0
    , 33.0, 67.0
    , 4.0, 66.0
    , 3.0, 42.0
    , 27.0, 33.0
    , 52.0, 41.0
    , 57.0, 59.0
    , 58.0, 66.0
    , 88.0, 65.0
    , 99.0, 67.0
    , 95.0, 55.0
    , 89.0, 55.0
    , 83.0, 38.0
    , 85.0, 25.0
    , 104.0, 35.0
    , 112.0, 37.0
    , 112.0, 24.0
    , 113.0, 13.0
    , 125.0, 30.0
    , 135.0, 32.0
    , 147.0, 18.0
    , 147.5, 36.0
    , 154.5, 45.0
    , 157.0, 54.0
    , 158.0, 61.0
    , 172.0, 82.0
    , 174.0, 87.0]

// optimal 7542
berlin52Coods = [565.0, 575.0
    , 25.0, 185.0
    , 345.0, 750.0
    , 945.0, 685.0
    , 845.0, 655.0
    , 880.0, 660.0
    , 25.0, 230.0
    , 525.0, 1000.0
    , 580.0, 1175.0
    , 650.0, 1130.0
    , 1605.0, 620.0
    , 1220.0, 580.0
    , 1465.0, 200.0
    , 1530.0, 5.0
    , 845.0, 680.0
    , 725.0, 370.0
    , 145.0, 665.0
    , 415.0, 635.0
    , 510.0, 875.0
    , 560.0, 365.0
    , 300.0, 465.0
    , 520.0, 585.0
    , 480.0, 415.0
    , 835.0, 625.0
    , 975.0, 580.0
    , 1215.0, 245.0
    , 1320.0, 315.0
    , 1250.0, 400.0
    , 660.0, 180.0
    , 410.0, 250.0
    , 420.0, 555.0
    , 575.0, 665.0
    , 1150.0, 1160.0
    , 700.0, 580.0
    , 685.0, 595.0
    , 685.0, 610.0
    , 770.0, 610.0
    , 795.0, 645.0
    , 720.0, 635.0
    , 760.0, 650.0
    , 475.0, 960.0
    , 95.0, 260.0
    , 875.0, 920.0
    , 700.0, 500.0
    , 555.0, 815.0
    , 830.0, 485.0
    , 1170.0, 65.0
    , 830.0, 610.0
    , 605.0, 625.0
    , 595.0, 360.0
    , 1340.0, 725.0
    , 1740.0, 245.0]

/**
 *  解析平下三角数据为二维矩阵 
 * @param {*} data 
 * @param {*} cityNum 
 * @returns 
 */
function generateData_1(data, cityNum) {
    const copy = [...data];
    let matrix = new Array(cityNum).fill(0).map(() => new Array(cityNum).fill(0));
    // console.log(arr)
    for (let i = 0; i < cityNum - 1; i++) {
        for (let j = cityNum - 1; j > i; j--) {
            // console.log(arr[j])
            matrix[j][i] = copy.shift();
        }
    }
    // 补全上三角
    for (let i = 0; i < cityNum; i++) {
        for (let j = i + 1; j < cityNum; j++) {
            matrix[i][j] = matrix[j][i];
        }
    }

    return matrix;
}


/**
 *  解析下三角数据为二维矩阵 
 * @param {*} data 
 * @param {*} cityNum 
 * @returns 
 */
function generateData_2(data, cityNum) {
    const copy = [...data];
    let matrix = new Array(cityNum).fill(0).map(() => new Array(cityNum).fill(0));
    for (let i = 0; i < cityNum; i++) {
        for (let j = 0; j <= i; j++) {
            matrix[i][j] = copy.shift();
        }
    }
    // 补全上三角
    for (let i = 0; i < cityNum; i++) {
        for (let j = i + 1; j < cityNum; j++) {
            matrix[i][j] = matrix[j][i];
        }
    }

    return matrix;
}

/**
 * 解析坐标信息生成节点数组
 * 
 */
function generateCoordinates(cos, cityNum) {
    const copy = [...cos];
    const res = [];
    for (let i = 0; i < cityNum; i++) {
        res.push({
            x: copy.shift(),
            y: copy.shift()
        })
    }

    return res;
}
